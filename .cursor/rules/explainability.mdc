---
description: Explainability & recourse implementation guidance
globs:
  - "src/glassalpha/explain/**"
  - "src/glassalpha/recourse/**"
  - "examples/**"
alwaysApply: false
---

Explainability & recourse implementation guidance

# Phase 1 Scope (TreeSHAP for Audit + Minimal Recourse)
**Note:** This rule is scoped for Phase 1. Focus is on TreeSHAP explanations for audit PDF generation.

# TreeSHAP Implementation
- Implement **exact TreeSHAP** for XGBoost/LightGBM models (Phase 1 priority)
- Support LogisticRegression with simple coefficient-based explanations
- Provide **KernelSHAP fallback** with configurable background sampling `N`; warn if N < 100
- Document the **baseline value** strategy; default to sampled training background

# Stability for Audit
- Ensure determinism: same seed -> identical SHAP values for PDF audit
- All features pass through a **Schema** (pydantic): dtype, bounds, categorical levels

# Minimal Recourse POC
- Basic constraint-respecting counterfactuals:
  - Immutable features list
  - Monotone directions (e.g., age only increases)
  - Simple min/max ranges
- Simple L2 cost objective; return **top-3** feasible changes
- Output format: actionable deltas + verification that constraints are satisfied

# Simple API Shape
- `Explainer(model, schema).explain(x)` -> dict with SHAP values for audit report
- `Recourse(model, schema, policy).suggest(x, k=3)` -> list of feasible changes with costs