# German Credit Dataset Audit Configuration
# This configuration demonstrates a complete ML audit pipeline for credit risk assessment
# using the German Credit dataset with fairness and bias analysis.

# =============================================================================
# AUDIT PROFILE AND BASIC SETTINGS
# =============================================================================

# Audit profile determines which components and validations are applied
audit_profile: "tabular_compliance"

# Strict mode enforces regulatory compliance requirements
# - Explicit random seeds (no defaults)
# - Locked data schema (no inference)
# - Full manifest generation
# - Deterministic plugin selection
# Note: Set to true for production/regulatory environments
strict_mode: false

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================

model:
  # Model type - triggers XGBoostWrapper from registry
  type: "xgboost"

  # Path to pre-trained model (optional - will train new model if not found)
  # path: "models/german_credit_xgboost.pkl"

  # Additional model parameters (optional)
  params:
    max_depth: 6
    learning_rate: 0.1
    n_estimators: 100
    objective: "binary:logistic"
    eval_metric: "logloss"

# =============================================================================
# DATA CONFIGURATION
# =============================================================================

data:
  # Data will be loaded using German Credit dataset loader
  # This path will be created automatically by the dataset loader
  dataset: "custom"
  path: "~/.glassalpha/data/german_credit_processed.csv"

  # Target and feature definitions
  target_column: "credit_risk"

  # Key features for credit risk assessment
  feature_columns:
    - "checking_account_status"
    - "duration_months"
    - "credit_history"
    - "purpose"
    - "credit_amount"
    - "savings_account"
    - "employment_duration"
    - "installment_rate"
    - "personal_status_sex"
    - "other_debtors"
    - "present_residence_since"
    - "property"
    - "age_years"
    - "other_installment_plans"
    - "housing"
    - "existing_credits_count"
    - "job"
    - "dependents_count"
    - "telephone"
    - "foreign_worker"
    - "gender" # Derived from personal_status_sex
    - "age_group" # Derived from age_years

  # Protected attributes for fairness analysis
  # These are sensitive demographic characteristics that should not lead to discrimination
  protected_attributes:
    - "personal_status_sex" # Personal status and gender combined
    - "age_years" # Age in years
    - "foreign_worker" # Nationality/residency status

  # Intersectional fairness analysis (E5.1)
  # Analyze bias at intersections of protected attributes
  # Format: "attr1*attr2" for two-way intersections
  intersections:
    # Example: Does the model treat young foreign workers differently than old citizens?
    - "age_years*foreign_worker"
    # Example: Does personal status interact with age to create bias?
    - "personal_status_sex*age_years"

# =============================================================================
# PREPROCESSING CONFIGURATION
# =============================================================================

preprocessing:
  # Use artifact-based preprocessing (production mode)
  mode: artifact

  # Path to preprocessing artifact
  artifact_path: artifacts/german_credit_preprocessor.joblib

  # Expected hashes for verification (computed by create_preprocessing_artifacts.py)
  expected_file_hash: "sha256:9373ae67dbcd5c1558fa4ba7a727e05575f9421358a8604a1d0eb0da80385a26"
  expected_params_hash: "sha256:cf5e71ee7e1733ca6d857b7f21df94a41f29ebeaaec9c6d46783336757cfcf37"

  # Expected output format
  expected_sparse: false

  # Fail on any mismatch (strict mode)
  fail_on_mismatch: true

  # Version compatibility policy
  version_policy:
    require_exact_in_strict: true # Require exact version match in strict mode
    allow_patch_non_strict: true # Allow patch version differences in non-strict mode
    allow_minor_in_strict: false # Don't allow minor version drift in strict mode

  # Unknown category detection thresholds
  thresholds:
    notice: 0.001 # Notice if >0.1% of values are unknown categories
    warn: 0.01 # Warn if ≥1% of values are unknown categories
    fail: 0.10 # Fail if ≥10% of values are unknown categories in strict mode

# =============================================================================
# EXPLAINER CONFIGURATION
# =============================================================================

explainers:
  # Strategy for selecting explainers (deterministic for reproducibility)
  strategy: "first_compatible"

  # Priority order - first compatible explainer will be selected
  priority:
    - "treeshap" # TreeSHAP - exact SHAP values for tree models (preferred)
    - "kernelshap" # KernelSHAP - model-agnostic fallback
    - "noop" # No-op fallback (should not be reached)

  # Explainer-specific configuration
  config:
    treeshap:
      # Maximum samples for SHAP value computation
      max_samples: 1000
      # Check additivity property (TreeSHAP should always be additive)
      check_additivity: true

    kernelshap:
      # Number of samples for model-agnostic SHAP approximation
      n_samples: 500
      # Background dataset size for KernelSHAP
      background_size: 100

# =============================================================================
# METRICS CONFIGURATION
# =============================================================================

metrics:
  # Performance metrics for model evaluation
  performance:
    - "accuracy" # Overall classification accuracy
    - "precision" # Positive predictive value
    - "recall" # Sensitivity/true positive rate
    - "f1" # Harmonic mean of precision and recall
    - "auc_roc" # Area under ROC curve
    - "classification_report" # Comprehensive classification metrics

  # Fairness metrics for bias detection
  fairness:
    - "demographic_parity" # Statistical parity across demographic groups
    - "equal_opportunity" # Equal true positive rates across groups
    - "equalized_odds" # Equal TPR and FPR across groups
    - "predictive_parity" # Equal precision across demographic groups

  # Drift metrics for model stability (requires reference data)
  drift:
    - "population_stability_index" # PSI for distribution shift detection
    - "kl_divergence" # KL divergence between distributions
    - "kolmogorov_smirnov" # Two-sample test for distribution changes

# =============================================================================
# REPRODUCIBILITY CONFIGURATION
# =============================================================================

reproducibility:
  # Master random seed for all randomness sources
  random_seed: 42

  # Enforce deterministic behavior across all components
  deterministic: true

  # Capture complete execution environment
  capture_environment: true

# =============================================================================
# REPORT CONFIGURATION
# =============================================================================

report:
  # Template for report generation
  template: "standard_audit"

  # Output format (PDF is primary target)
  output_format: "pdf"

  # Report sections to include
  include_sections:
    - "executive_summary" # High-level findings and risk assessment
    - "data_overview" # Dataset characteristics and quality
    - "model_performance" # Performance metrics and validation
    - "global_explanations" # Feature importance and model behavior
    - "local_explanations" # Individual prediction explanations
    - "fairness_analysis" # Bias detection and demographic analysis
    - "drift_detection" # Model stability and data shift analysis
    - "audit_manifest" # Complete reproducibility information
    - "regulatory_compliance" # Compliance checklist and recommendations

# =============================================================================
# RECOURSE CONFIGURATION (Advanced Feature)
# =============================================================================

recourse:
  # Enable recourse generation for individual predictions
  enabled: true

  # Features that cannot be changed (immutable constraints)
  immutable_features:
    - "age_years" # Age cannot be changed
    - "gender" # Gender is protected characteristic
    - "personal_status_sex" # Personal status is largely fixed
    - "foreign_worker" # Nationality/residency status

  # Directional constraints (features that can only improve)
  monotonic_constraints:
    credit_amount: "decrease_only" # Lower loan amount is safer
    duration_months: "decrease_only" # Shorter duration is safer
    savings_account: "increase_only" # More savings is always better
    employment_duration: "increase_only" # Longer employment is better
    existing_credits_count: "decrease_only" # Fewer existing credits is better
