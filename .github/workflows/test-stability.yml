name: Test Stability Check

# Run stability checks on critical test paths
# Purpose: Detect flaky tests and non-deterministic behavior before they reach main

on:
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
      - "pytest.ini"
      - ".github/workflows/test-stability.yml"
  schedule:
    # Run daily at 2 AM UTC to catch intermittent issues
    - cron: "0 2 * * *"
  workflow_dispatch:
    inputs:
      runs:
        description: "Number of test runs"
        required: false
        default: "5"

permissions:
  contents: read

jobs:
  stability-check:
    name: Stability Check (Python ${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11", "3.12"]
        test-suite:
          - name: "Critical Regression Guards"
            pattern: "test_critical_regression_guards"
            runs: 3
          - name: "Determinism Tests"
            pattern: "test_determinism"
            runs: 5
          - name: "Notebook API Tests"
            pattern: "test_audit_notebook_api"
            runs: 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[all,dev]"

      - name: Set deterministic environment
        run: |
          echo "PYTHONHASHSEED=0" >> $GITHUB_ENV
          echo "TZ=UTC" >> $GITHUB_ENV
          echo "MPLBACKEND=Agg" >> $GITHUB_ENV
          echo "SOURCE_DATE_EPOCH=1577836800" >> $GITHUB_ENV
          echo "OMP_NUM_THREADS=1" >> $GITHUB_ENV
          echo "MKL_NUM_THREADS=1" >> $GITHUB_ENV
          echo "OPENBLAS_NUM_THREADS=1" >> $GITHUB_ENV
          echo "GLASSALPHA_NO_PROGRESS=1" >> $GITHUB_ENV

      - name: Run stability check - ${{ matrix.test-suite.name }}
        id: stability
        run: |
          echo "Running ${{ matrix.test-suite.name }} ${{ matrix.test-suite.runs }} times..."

          FAILED=0
          for i in $(seq 1 ${{ matrix.test-suite.runs }}); do
            echo "::group::Run $i of ${{ matrix.test-suite.runs }}"
            if ! python -m pytest -k "${{ matrix.test-suite.pattern }}" --tb=short -v; then
              echo "::error::Test run $i failed"
              FAILED=$((FAILED + 1))
            fi
            echo "::endgroup::"
          done

          if [ $FAILED -gt 0 ]; then
            RATE=$(awk "BEGIN {printf \"%.1f\", $FAILED/${{ matrix.test-suite.runs }}*100}")
            echo "::error::Stability check failed! Failure rate: $RATE% ($FAILED/${{ matrix.test-suite.runs }} runs)"
            exit 1
          else
            echo "::notice::✓ All ${{ matrix.test-suite.runs }} runs passed - tests are stable"
          fi

      - name: Upload failure logs (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: stability-logs-${{ matrix.os }}-py${{ matrix.python-version }}-${{ matrix.test-suite.name }}
          path: |
            pytest-logs/
            .pytest_cache/
          retention-days: 7

  stability-summary:
    name: Stability Summary
    runs-on: ubuntu-latest
    needs: stability-check
    if: always()
    steps:
      - name: Check stability results
        run: |
          if [ "${{ needs.stability-check.result }}" == "failure" ]; then
            echo "::error::Stability checks failed! Some tests are flaky."
            echo "Review the logs above to identify non-deterministic tests."
            exit 1
          else
            echo "::notice::✓ All stability checks passed - tests are stable"
          fi
