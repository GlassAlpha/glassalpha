name: Tests with Environment Sync

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install gobject-introspection cairo pango gdk-pixbuf libffi libomp
          # Set library paths for WeasyPrint runtime linking
          echo "PKG_CONFIG_PATH=$(brew --prefix)/lib/pkgconfig" >> $GITHUB_ENV
          echo "DYLD_FALLBACK_LIBRARY_PATH=$(brew --prefix)/lib:$DYLD_FALLBACK_LIBRARY_PATH" >> $GITHUB_ENV
          echo "LDFLAGS=-L$(brew --prefix)/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix)/include" >> $GITHUB_ENV

      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgomp1 libcairo2-dev libpango1.0-dev libgdk-pixbuf2.0-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,all]"

      - name: Validate environment sync
        run: |
          # Check that package is installed in editable mode
          python scripts/sync-deps.py --check || {
            echo "❌ Environment out of sync in CI"
            echo "This should not happen - CI installs in editable mode by default"
            exit 1
          }

      - name: Run tests
        env:
          PYTHONHASHSEED: 0
          TZ: UTC
          MPLBACKEND: Agg
        run: |
          pytest -q --tb=short

      - name: Check environment after tests
        if: always()
        run: |
          # Verify environment didn't get corrupted during tests
          python scripts/sync-deps.py --check || {
            echo "⚠️  Environment changed during test run"
            echo "This might indicate a test is modifying the installation"
          }
