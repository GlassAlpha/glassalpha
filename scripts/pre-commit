#!/usr/bin/env bash
# Pre-commit hook - runs smoke test only when fragile contract areas change
set -euo pipefail

# Define the fragile files that could break our 4 critical contracts
FRAGILE_PATTERNS=(
    "src/glassalpha/pipeline/audit.py"        # Logger contract
    "src/glassalpha/models/sklearn.py" # Save/load contract
    "src/glassalpha/report/templates/"        # Template packaging
    "src/glassalpha/utils/manifest.py"        # Manifest structure
    "src/glassalpha/constants.py"             # Contract definitions
    "pyproject.toml"                          # Packaging config
    "MANIFEST.in"                             # Packaging file list
    ".github/workflows/"                      # CI workflow files (YAML syntax)
    "src/glassalpha/cli/"                     # CLI commands (docs must stay in sync)
    "src/glassalpha/configs/"                 # Config templates
    "scripts/create_test_datasets.py"         # Test data generator
)

# Check if any fragile files are in this commit
echo "üîç Checking if fragile contract areas changed..."

changed_files=$(git diff --cached --name-only)

fragile_changed=false
for pattern in "${FRAGILE_PATTERNS[@]}"; do
    if echo "$changed_files" | grep -q "$pattern"; then
        echo "   üìù Fragile file changed: $pattern"
        fragile_changed=true
    fi
done

if [ "$fragile_changed" = false ]; then
    echo "   ‚úÖ No fragile contract areas changed - skipping smoke test"
    echo ""
    exit 0
fi

echo ""
echo "üî• Fragile contract areas changed - validating workflow files..."
echo ""

# Validate YAML syntax for workflow files
echo "üîç Validating workflow YAML syntax..."
for file in $(git diff --cached --name-only | grep "\.github/workflows/.*\.yml$\|\.github/workflows/.*\.yaml$"); do
    if command -v yamllint >/dev/null 2>&1; then
        if ! yamllint --config-file .yamllint "$file"; then
            echo "‚ùå YAML syntax errors in $file"
            echo ""
            echo "Install yamllint for better YAML validation:"
            echo "  pip install yamllint>=1.35"
            echo ""
            exit 1
        fi
    else
        # Fallback: basic YAML syntax check with python
        if ! python3 -c "
import yaml
import sys
try:
    with open('$file', 'r') as f:
        yaml.safe_load(f)
    sys.exit(0)
except yaml.YAMLError as e:
    print(f'‚ùå YAML syntax error in $file:', str(e))
    sys.exit(1)
except Exception as e:
    print(f'‚ùå Error reading $file:', str(e))
    sys.exit(1)
" 2>/dev/null; then
            echo "‚ùå YAML syntax errors in $file"
            echo ""
            echo "Install yamllint for better YAML validation:"
            echo "  pip install yamllint>=1.35"
            echo ""
            exit 1
        fi
    fi
done

echo "‚úÖ Workflow YAML validation passed"
echo ""

# Quick workflow action validation (when workflow files change)
echo "üîó Checking workflow action references..."
workflow_files_changed=$(git diff --cached --name-only | grep -c "\.github/workflows/" || true)
if [ "$workflow_files_changed" -gt 0 ]; then
    echo "   üìã Workflows changed - checking common action versions..."
    # Simple check for known problematic patterns
    for file in $(git diff --cached --name-only | grep "\.github/workflows/.*\.yml$\|\.github/workflows/.*\.yaml$"); do
        if [ -f "$file" ]; then
            # Check for the specific sigstore issue we just fixed
            if grep -q "sigstore/gh-action-sigstore-python@v2" "$file"; then
                echo "   ‚ùå Found deprecated sigstore action in $file"
                echo "      Replace 'sigstore/gh-action-sigstore-python@v2' with 'sigstore/cosign-installer@main'"
                echo ""
                exit 1
            fi
            # Check for other common issues
            if grep -q "actions/checkout@v1\|actions/setup-python@v1\|actions/cache@v1" "$file"; then
                echo "   ‚ö†Ô∏è  Found potentially outdated action versions in $file"
                echo "      Consider updating to latest major versions"
                echo ""
            fi
        fi
    done
    echo "   ‚úÖ No critical workflow action issues found"
    echo ""
else
    echo "   ‚úÖ No workflow files changed"
    echo ""
fi

echo "üìù Auto-generating CLI documentation..."
echo ""

# Check if CLI files changed
cli_files_changed=$(git diff --cached --name-only | grep -c "src/glassalpha/cli/" || true)
if [ "$cli_files_changed" -gt 0 ]; then
    echo "   üìã CLI code changed - regenerating docs..."

    # Generate CLI docs
    if python3 scripts/generate_cli_docs.py --output site/docs/reference/cli.md; then
        # Stage the updated docs
        git add site/docs/reference/cli.md
        echo "   ‚úÖ CLI docs regenerated and staged"
        echo ""
    else
        echo "   ‚ùå Failed to generate CLI docs"
        echo "   Run manually: python scripts/generate_cli_docs.py --output site/docs/reference/cli.md"
        echo ""
        exit 1
    fi
else
    echo "   ‚úÖ No CLI changes - docs generation skipped"
    echo ""
fi

echo "üîç Validating packaging configuration..."
echo ""

# Check if packaging files changed
packaging_files_changed=$(git diff --cached --name-only | grep -c "MANIFEST.in\|pyproject.toml\|src/glassalpha/configs/\|scripts/create_test_datasets.py\|.github/workflows/ci.yml" || true)
if [ "$packaging_files_changed" -gt 0 ]; then
    echo "   üì¶ Packaging files changed - running validation tests..."

    # Run packaging tests
    if python3 -m pytest tests/test_packaging.py -v; then
        echo "   ‚úÖ Packaging validation passed"
        echo ""
    else
        echo "   ‚ùå Packaging validation failed"
        echo ""
        echo "   Fix packaging issues before committing:"
        echo "   - Ensure config files are in src/glassalpha/configs/"
        echo "   - Update MANIFEST.in to include necessary files"
        echo "   - Fix hardcoded paths in scripts"
        echo ""
        exit 1
    fi
else
    echo "   ‚úÖ No packaging changes - validation skipped"
    echo ""
fi

echo "üî• Running smoke test..."
echo ""

# Run the smoke test
if scripts/wheel_smoke.sh; then
    echo ""
    echo "‚úÖ Pre-commit smoke test passed - safe to commit"
    exit 0
else
    echo ""
    echo "‚ùå Pre-commit smoke test failed!"
    echo ""
    echo "Contract violations detected in staged changes."
    echo "Fix the issues and try committing again:"
    echo ""
    echo "1. Run: scripts/wheel_smoke.sh"
    echo "2. Fix any contract violations it reports"
    echo "3. Re-run: scripts/wheel_smoke.sh"
    echo "4. When green, try committing again"
    echo ""
    echo "üõë Commit blocked to prevent CI thrashing"
    exit 1
fi
